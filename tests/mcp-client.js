// Generated by Copilot
const { chromium } = require('playwright');

async function runScenario() {
  const browser = await chromium.launch({ headless: false });
  const context = await browser.newContext();
  const page = await context.newPage();
  
  try {
    // Step 1: Navigate to the movie database website
    console.log('Step 1: Navigating to the website...');
    await page.goto('https://www.themoviedb.org/');
    
    // Step 2: Search for "Garfield"
    console.log('Step 2: Searching for Garfield...');
    await page.waitForSelector('input[name="query"], .search input');
    await page.fill('input[name="query"], .search input', 'Garfield');
    
    // Step 3: Submit the search form
    console.log('Step 3: Submitting the search...');
    await page.press('input[name="query"], .search input', 'Enter');
    
    // Step 4: Wait for the results to load and verify Garfield appears
    console.log('Step 4: Verifying results...');
    await page.waitForLoadState('networkidle');
    await page.waitForSelector('.title h2, h2.title');
    
    // Step 5: Looking for Garfield in the search results
    console.log('Step 5: Looking for Garfield in the search results...');
    
    // Wait a moment to ensure page is fully loaded
    await page.waitForTimeout(1000);
    
    // Looking for movie cards with Garfield in the title
    const selectors = [
      '.card .details .title h2:has-text("Garfield")',
      '.card a[href*="garfield"]',
      '.card:has-text("Garfield")'
    ];
    
    for (const selector of selectors) {
      const count = await page.locator(selector).count();
      console.log(`Selector ${selector}: ${count} elements found`);
      
      if (count > 0) {
        console.log(`Success! Found Garfield with selector: ${selector}`);
        // Let's get the text of the first element
        if (selector === '*:has-text("Garfield")') {
          const elements = await page.locator(selector).all();
          for (let i = 0; i < Math.min(5, elements.length); i++) {
            const tagName = await elements[i].evaluate(node => node.tagName);
            const classNames = await elements[i].evaluate(node => node.className);
            console.log(`Element ${i}: Tag=${tagName}, Class=${classNames}`);
          }
        }
      }
    }
    
  } catch (error) {
    console.error('Error during test execution:', error);
  } finally {
    // Take a screenshot
    await page.screenshot({ path: 'garfield-search-results.png' });
    // Close the browser
    await browser.close();
    process.exit(0);
  }
}

runScenario();
